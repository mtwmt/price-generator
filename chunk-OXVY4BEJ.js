var u=Object.create;var n=Object.defineProperty,v=Object.defineProperties,w=Object.getOwnPropertyDescriptor,x=Object.getOwnPropertyDescriptors,y=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,z=Object.getPrototypeOf,o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var m=(a,b)=>(b=Symbol[a])?b:Symbol.for("Symbol."+a);var r=(a,b,c)=>b in a?n(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,C=(a,b)=>{for(var c in b||={})o.call(b,c)&&r(a,c,b[c]);if(l)for(var c of l(b))s.call(b,c)&&r(a,c,b[c]);return a},D=(a,b)=>v(a,x(b));var E=(a=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(a,{get:(b,c)=>(typeof require<"u"?require:b)[c]}):a)(function(a){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+a+'" is not supported')});var F=(a,b)=>{var c={};for(var d in a)o.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&l)for(var d of l(a))b.indexOf(d)<0&&s.call(a,d)&&(c[d]=a[d]);return c};var G=(a,b)=>()=>(b||a((b={exports:{}}).exports,b),b.exports);var A=(a,b,c,d)=>{if(b&&typeof b=="object"||typeof b=="function")for(let f of y(b))!o.call(a,f)&&f!==c&&n(a,f,{get:()=>b[f],enumerable:!(d=w(b,f))||d.enumerable});return a};var H=(a,b,c)=>(c=a!=null?u(z(a)):{},A(b||!a||!a.__esModule?n(c,"default",{value:a,enumerable:!0}):c,a));var I=(a,b,c)=>new Promise((d,f)=>{var h=e=>{try{g(c.next(e))}catch(i){f(i)}},j=e=>{try{g(c.throw(e))}catch(i){f(i)}},g=e=>e.done?d(e.value):Promise.resolve(e.value).then(h,j);g((c=c.apply(a,b)).next())}),B=function(a,b){this[0]=a,this[1]=b},J=(a,b,c)=>{var d=(j,g,e,i)=>{try{var p=c[j](g),q=(g=p.value)instanceof B,t=p.done;Promise.resolve(q?g[0]:g).then(k=>q?d(j==="return"?j:"next",g[1]?{done:k.done,value:k.value}:k,e,i):e({value:k,done:t})).catch(k=>d("throw",k,e,i))}catch(k){i(k)}},f=j=>h[j]=g=>new Promise((e,i)=>d(j,g,e,i)),h={};return c=c.apply(a,b),h[m("asyncIterator")]=()=>h,f("next"),f("throw"),f("return"),h};var K=(a,b,c)=>(b=a[m("asyncIterator")])?b.call(a):(a=a[m("iterator")](),b={},c=(d,f)=>(f=a[d])&&(b[d]=h=>new Promise((j,g,e)=>(h=f.call(a,h),e=h.done,Promise.resolve(h.value).then(i=>j({value:i,done:e}),g)))),c("next"),c("return"),b);export{C as a,D as b,E as c,F as d,G as e,H as f,I as g,B as h,J as i,K as j};
