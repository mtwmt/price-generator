"use strict";

(function () {
  var $modal = document.querySelector('#modal');
  var $preview = document.querySelector('#preview');
  var $form = document.querySelector('form#form');
  var $inputs = document.querySelectorAll('input, textarea, select'); // common fn

  var _common = common(),
      setAmount = _common.setAmount,
      setTotal = _common.setTotal; // validate


  var _verify = verify(),
      constraints = _verify.constraints,
      setItemFormValidate = _verify.setItemFormValidate,
      showErrorsForInput = _verify.showErrorsForInput,
      handleFormSubmit = _verify.handleFormSubmit; // modal view


  var _modalView = modalView(),
      createModal = _modalView.createModal;

  var delItem = function delItem(row) {
    row.querySelector('.delItem').addEventListener('click', function (e) {
      e.preventDefault();

      if (document.querySelectorAll('[data-item]').length > 1) {
        this.parentElement.parentElement.remove();
        setTotal();
      }

      setItemFormValidate();
    });
  };

  var updateItemRow = function updateItemRow(row) {
    row.querySelectorAll('input').forEach(function (e, i) {
      e.addEventListener('change', function (ev) {
        setAmount(row);
        setTotal();
        var errors = validate($form, constraints) || {};
        showErrorsForInput(e, errors[e.name]);
      });
    });
    delItem(row);
  };
  /**
   * formData
   * @returns 表單資料
   */


  var formData = function formData() {
    var _$form$querySelector;

    var logoFile = (_$form$querySelector = $form.querySelector('[name=logo]')) === null || _$form$querySelector === void 0 ? void 0 : _$form$querySelector.files[0];
    var getLogo = !!logoFile ? URL.createObjectURL(logoFile) : null;
    var data = {
      logo: getLogo,
      company: $form.querySelector('[name=company]').value,
      taxID: $form.querySelector('[name=taxID]').value,
      name: $form.querySelector('[name=name]').value,
      phone: $form.querySelector('[name=phone]').value,
      email: $form.querySelector('[name=email]').value,
      startDate: $form.querySelector('[name=startDate]').value,
      endDate: $form.querySelector('[name=endDate]').value,
      desc: $form.querySelector('[name=desc]').value,
      total: $form.querySelector('#total-price').textContent,
      items: []
    };
    $form.querySelectorAll('[data-item]').forEach(function (e, index) {
      data.items.push({
        category: e.querySelector("[name*=category").value,
        item: e.querySelector("[name*=item").value,
        price: e.querySelector("[name*=price").value,
        count: e.querySelector("[name*=count").value,
        unit: e.querySelector("[name*=unit").value,
        amount: e.querySelector("[name*=amount]").value
      });
    });
    return data;
  };

  var exportTemplate = function exportTemplate(tmp) {
    var data = formData();
    var modalBody = tmp.querySelector('.modal-main');
    modalBody.insertAdjacentHTML('beforeend', createModal(data));
  };

  var resetExportTemplate = function resetExportTemplate(tmp) {
    tmp.querySelector('.modal-main').textContent = '';
  }; //======== document init ========


  $form.querySelectorAll('[data-item]').forEach(function (e) {
    updateItemRow(e);
    setItemFormValidate();
  });
  $inputs.forEach(function (e, i) {
    e.addEventListener('change', function (ev) {
      var errors = validate($form, constraints) || {};
      showErrorsForInput(e, errors[e.name]);
    });
  }); // add item row

  $form.querySelector('#addItem').addEventListener('click', function (e) {
    e.preventDefault();
    var row = $form.querySelector('[data-item]');
    var newRow = row.cloneNode(true);
    newRow.querySelectorAll('input').forEach(function (e) {
      e.value = e.defaultValue;
      e.classList.remove('is-invalid');
      e.parentNode.querySelectorAll('.invalid-feedback').forEach(function (el) {
        el.remove();
      });
    });
    $form.querySelector('[data-items]').append(newRow);
    updateItemRow(newRow);
    setItemFormValidate();
  }); // on preview

  $preview.addEventListener('show.bs.modal', function (e) {
    exportTemplate(this);
  });
  $preview.addEventListener('hidden.bs.modal', function (e) {
    e.preventDefault();
    resetExportTemplate(this);
  }); // on Submit

  $modal.addEventListener('show.bs.modal', function (e) {
    if (!handleFormSubmit($form)) {
      e.preventDefault();
      resetExportTemplate(this);
    } else {
      exportTemplate(this);
    }
  });
  $modal.addEventListener('hidden.bs.modal', function (e) {
    e.preventDefault();
    resetExportTemplate(this);
  }); // =========== Export ============

  $modal.querySelector('#exportImage').addEventListener('click', function () {
    var preview = $modal.querySelector('.modal-content'); // export Image

    html2canvas(preview).then(function (canvas) {
      document.body.appendChild(canvas);
      var $a = document.createElement('a');
      $a.href = canvas.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');
      $a.download = ''.concat(new Date().toLocaleString('roc', {
        hour12: false
      }), '_quotation.jpg');
      $a.click();
    });
  }); // =========== Print ==============

  var printScreen = function printScreen(print) {
    var printArea = print.innerHTML;
    var printPage = window.open('', 'Printing...', '');
    printPage.document.open();
    printPage.document.write("<html>\n        <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n          <title>\u5831\u50F9\u55AE\u7522\u751F\u5668</title>\n          <link rel=\"stylesheet\" href=\"https://unpkg.com/@tabler/core@latest/dist/css/tabler.min.css\"/>\n        </head>\n        <body onload='window.print();window.close()'>");
    printPage.document.write(printArea);
    printPage.document.close('</body></html>');
  };

  $modal.querySelector('#print').addEventListener('click', function () {
    var now = new Date().toLocaleString('roc', {
      hour12: false
    });
    var printHtml = $modal.querySelector('.modal-dialog .modal-content');
    var newPrintHtml = printHtml.cloneNode(true);
    newPrintHtml.querySelector('.modal-footer').remove();
    newPrintHtml.insertAdjacentHTML('beforeend', "<p style=\"text-align: right;\">\u5217\u5370\u6642\u9593\uFF1A".concat(now, "</p>"));
    printScreen(newPrintHtml);
  });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJG1vZGFsIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiJHByZXZpZXciLCIkZm9ybSIsIiRpbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29tbW9uIiwic2V0QW1vdW50Iiwic2V0VG90YWwiLCJ2ZXJpZnkiLCJjb25zdHJhaW50cyIsInNldEl0ZW1Gb3JtVmFsaWRhdGUiLCJzaG93RXJyb3JzRm9ySW5wdXQiLCJoYW5kbGVGb3JtU3VibWl0IiwibW9kYWxWaWV3IiwiY3JlYXRlTW9kYWwiLCJkZWxJdGVtIiwicm93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImxlbmd0aCIsInBhcmVudEVsZW1lbnQiLCJyZW1vdmUiLCJ1cGRhdGVJdGVtUm93IiwiZm9yRWFjaCIsImkiLCJldiIsImVycm9ycyIsInZhbGlkYXRlIiwibmFtZSIsImZvcm1EYXRhIiwibG9nb0ZpbGUiLCJmaWxlcyIsImdldExvZ28iLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJkYXRhIiwibG9nbyIsImNvbXBhbnkiLCJ2YWx1ZSIsInRheElEIiwicGhvbmUiLCJlbWFpbCIsInN0YXJ0RGF0ZSIsImVuZERhdGUiLCJkZXNjIiwidG90YWwiLCJ0ZXh0Q29udGVudCIsIml0ZW1zIiwiaW5kZXgiLCJwdXNoIiwiY2F0ZWdvcnkiLCJpdGVtIiwicHJpY2UiLCJjb3VudCIsInVuaXQiLCJhbW91bnQiLCJleHBvcnRUZW1wbGF0ZSIsInRtcCIsIm1vZGFsQm9keSIsImluc2VydEFkamFjZW50SFRNTCIsInJlc2V0RXhwb3J0VGVtcGxhdGUiLCJuZXdSb3ciLCJjbG9uZU5vZGUiLCJkZWZhdWx0VmFsdWUiLCJjbGFzc0xpc3QiLCJwYXJlbnROb2RlIiwiZWwiLCJhcHBlbmQiLCJwcmV2aWV3IiwiaHRtbDJjYW52YXMiLCJ0aGVuIiwiY2FudmFzIiwiYm9keSIsImFwcGVuZENoaWxkIiwiJGEiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsInRvRGF0YVVSTCIsInJlcGxhY2UiLCJkb3dubG9hZCIsImNvbmNhdCIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsImhvdXIxMiIsImNsaWNrIiwicHJpbnRTY3JlZW4iLCJwcmludCIsInByaW50QXJlYSIsImlubmVySFRNTCIsInByaW50UGFnZSIsIndpbmRvdyIsIm9wZW4iLCJ3cml0ZSIsImNsb3NlIiwibm93IiwicHJpbnRIdG1sIiwibmV3UHJpbnRIdG1sIl0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUMsWUFBWTtBQUNYLE1BQU1BLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLFFBQXZCLENBQWY7QUFDQSxNQUFNQyxRQUFRLEdBQUdGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixVQUF2QixDQUFqQjtBQUNBLE1BQU1FLEtBQUssR0FBR0gsUUFBUSxDQUFDQyxhQUFULENBQXVCLFdBQXZCLENBQWQ7QUFDQSxNQUFNRyxPQUFPLEdBQUdKLFFBQVEsQ0FBQ0ssZ0JBQVQsQ0FBMEIseUJBQTFCLENBQWhCLENBSlcsQ0FNWDs7QUFOVyxnQkFPcUJDLE1BQU0sRUFQM0I7QUFBQSxNQU9IQyxTQVBHLFdBT0hBLFNBUEc7QUFBQSxNQU9RQyxRQVBSLFdBT1FBLFFBUFIsRUFTWDs7O0FBVFcsZ0JBZVBDLE1BQU0sRUFmQztBQUFBLE1BV1RDLFdBWFMsV0FXVEEsV0FYUztBQUFBLE1BWVRDLG1CQVpTLFdBWVRBLG1CQVpTO0FBQUEsTUFhVEMsa0JBYlMsV0FhVEEsa0JBYlM7QUFBQSxNQWNUQyxnQkFkUyxXQWNUQSxnQkFkUyxFQWlCWDs7O0FBakJXLG1CQWtCYUMsU0FBUyxFQWxCdEI7QUFBQSxNQWtCSEMsV0FsQkcsY0FrQkhBLFdBbEJHOztBQW9CWCxNQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDQyxHQUFELEVBQVM7QUFDdkJBLElBQUFBLEdBQUcsQ0FBQ2hCLGFBQUosQ0FBa0IsVUFBbEIsRUFBOEJpQixnQkFBOUIsQ0FBK0MsT0FBL0MsRUFBd0QsVUFBVUMsQ0FBVixFQUFhO0FBQ25FQSxNQUFBQSxDQUFDLENBQUNDLGNBQUY7O0FBQ0EsVUFBSXBCLFFBQVEsQ0FBQ0ssZ0JBQVQsQ0FBMEIsYUFBMUIsRUFBeUNnQixNQUF6QyxHQUFrRCxDQUF0RCxFQUF5RDtBQUN2RCxhQUFLQyxhQUFMLENBQW1CQSxhQUFuQixDQUFpQ0MsTUFBakM7QUFDQWYsUUFBQUEsUUFBUTtBQUNUOztBQUNERyxNQUFBQSxtQkFBbUI7QUFDcEIsS0FQRDtBQVFELEdBVEQ7O0FBV0EsTUFBTWEsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDUCxHQUFELEVBQVM7QUFDN0JBLElBQUFBLEdBQUcsQ0FBQ1osZ0JBQUosQ0FBcUIsT0FBckIsRUFBOEJvQixPQUE5QixDQUFzQyxVQUFDTixDQUFELEVBQUlPLENBQUosRUFBVTtBQUM5Q1AsTUFBQUEsQ0FBQyxDQUFDRCxnQkFBRixDQUFtQixRQUFuQixFQUE2QixVQUFDUyxFQUFELEVBQVE7QUFDbkNwQixRQUFBQSxTQUFTLENBQUNVLEdBQUQsQ0FBVDtBQUNBVCxRQUFBQSxRQUFRO0FBQ1IsWUFBTW9CLE1BQU0sR0FBR0MsUUFBUSxDQUFDMUIsS0FBRCxFQUFRTyxXQUFSLENBQVIsSUFBZ0MsRUFBL0M7QUFDQUUsUUFBQUEsa0JBQWtCLENBQUNPLENBQUQsRUFBSVMsTUFBTSxDQUFDVCxDQUFDLENBQUNXLElBQUgsQ0FBVixDQUFsQjtBQUNELE9BTEQ7QUFNRCxLQVBEO0FBUUFkLElBQUFBLE9BQU8sQ0FBQ0MsR0FBRCxDQUFQO0FBQ0QsR0FWRDtBQVlBO0FBQ0Y7QUFDQTtBQUNBOzs7QUFDRSxNQUFNYyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxHQUFZO0FBQUE7O0FBQzNCLFFBQU1DLFFBQVEsMkJBQUc3QixLQUFLLENBQUNGLGFBQU4sQ0FBb0IsYUFBcEIsQ0FBSCx5REFBRyxxQkFBb0NnQyxLQUFwQyxDQUEwQyxDQUExQyxDQUFqQjtBQUNBLFFBQU1DLE9BQU8sR0FBRyxDQUFDLENBQUNGLFFBQUYsR0FBYUcsR0FBRyxDQUFDQyxlQUFKLENBQW9CSixRQUFwQixDQUFiLEdBQTZDLElBQTdEO0FBRUEsUUFBTUssSUFBSSxHQUFHO0FBQ1hDLE1BQUFBLElBQUksRUFBRUosT0FESztBQUVYSyxNQUFBQSxPQUFPLEVBQUVwQyxLQUFLLENBQUNGLGFBQU4sQ0FBb0IsZ0JBQXBCLEVBQXNDdUMsS0FGcEM7QUFHWEMsTUFBQUEsS0FBSyxFQUFFdEMsS0FBSyxDQUFDRixhQUFOLENBQW9CLGNBQXBCLEVBQW9DdUMsS0FIaEM7QUFJWFYsTUFBQUEsSUFBSSxFQUFFM0IsS0FBSyxDQUFDRixhQUFOLENBQW9CLGFBQXBCLEVBQW1DdUMsS0FKOUI7QUFLWEUsTUFBQUEsS0FBSyxFQUFFdkMsS0FBSyxDQUFDRixhQUFOLENBQW9CLGNBQXBCLEVBQW9DdUMsS0FMaEM7QUFNWEcsTUFBQUEsS0FBSyxFQUFFeEMsS0FBSyxDQUFDRixhQUFOLENBQW9CLGNBQXBCLEVBQW9DdUMsS0FOaEM7QUFPWEksTUFBQUEsU0FBUyxFQUFFekMsS0FBSyxDQUFDRixhQUFOLENBQW9CLGtCQUFwQixFQUF3Q3VDLEtBUHhDO0FBUVhLLE1BQUFBLE9BQU8sRUFBRTFDLEtBQUssQ0FBQ0YsYUFBTixDQUFvQixnQkFBcEIsRUFBc0N1QyxLQVJwQztBQVNYTSxNQUFBQSxJQUFJLEVBQUUzQyxLQUFLLENBQUNGLGFBQU4sQ0FBb0IsYUFBcEIsRUFBbUN1QyxLQVQ5QjtBQVVYTyxNQUFBQSxLQUFLLEVBQUU1QyxLQUFLLENBQUNGLGFBQU4sQ0FBb0IsY0FBcEIsRUFBb0MrQyxXQVZoQztBQVdYQyxNQUFBQSxLQUFLLEVBQUU7QUFYSSxLQUFiO0FBY0E5QyxJQUFBQSxLQUFLLENBQUNFLGdCQUFOLENBQXVCLGFBQXZCLEVBQXNDb0IsT0FBdEMsQ0FBOEMsVUFBQ04sQ0FBRCxFQUFJK0IsS0FBSixFQUFjO0FBQzFEYixNQUFBQSxJQUFJLENBQUNZLEtBQUwsQ0FBV0UsSUFBWCxDQUFnQjtBQUNkQyxRQUFBQSxRQUFRLEVBQUVqQyxDQUFDLENBQUNsQixhQUFGLG9CQUFtQ3VDLEtBRC9CO0FBRWRhLFFBQUFBLElBQUksRUFBRWxDLENBQUMsQ0FBQ2xCLGFBQUYsZ0JBQStCdUMsS0FGdkI7QUFHZGMsUUFBQUEsS0FBSyxFQUFFbkMsQ0FBQyxDQUFDbEIsYUFBRixpQkFBZ0N1QyxLQUh6QjtBQUlkZSxRQUFBQSxLQUFLLEVBQUVwQyxDQUFDLENBQUNsQixhQUFGLGlCQUFnQ3VDLEtBSnpCO0FBS2RnQixRQUFBQSxJQUFJLEVBQUVyQyxDQUFDLENBQUNsQixhQUFGLGdCQUErQnVDLEtBTHZCO0FBTWRpQixRQUFBQSxNQUFNLEVBQUV0QyxDQUFDLENBQUNsQixhQUFGLG1CQUFrQ3VDO0FBTjVCLE9BQWhCO0FBUUQsS0FURDtBQVVBLFdBQU9ILElBQVA7QUFDRCxHQTdCRDs7QUErQkEsTUFBTXFCLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBU0MsR0FBVCxFQUFjO0FBQ25DLFFBQU10QixJQUFJLEdBQUdOLFFBQVEsRUFBckI7QUFDQSxRQUFNNkIsU0FBUyxHQUFHRCxHQUFHLENBQUMxRCxhQUFKLENBQWtCLGFBQWxCLENBQWxCO0FBRUEyRCxJQUFBQSxTQUFTLENBQUNDLGtCQUFWLENBQTZCLFdBQTdCLEVBQTBDOUMsV0FBVyxDQUFDc0IsSUFBRCxDQUFyRDtBQUNELEdBTEQ7O0FBTUEsTUFBTXlCLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBU0gsR0FBVCxFQUFjO0FBQ3hDQSxJQUFBQSxHQUFHLENBQUMxRCxhQUFKLENBQWtCLGFBQWxCLEVBQWlDK0MsV0FBakMsR0FBK0MsRUFBL0M7QUFDRCxHQUZELENBcEZXLENBd0ZYOzs7QUFFQTdDLEVBQUFBLEtBQUssQ0FBQ0UsZ0JBQU4sQ0FBdUIsYUFBdkIsRUFBc0NvQixPQUF0QyxDQUE4QyxVQUFDTixDQUFELEVBQU87QUFDbkRLLElBQUFBLGFBQWEsQ0FBQ0wsQ0FBRCxDQUFiO0FBQ0FSLElBQUFBLG1CQUFtQjtBQUNwQixHQUhEO0FBS0FQLEVBQUFBLE9BQU8sQ0FBQ3FCLE9BQVIsQ0FBZ0IsVUFBQ04sQ0FBRCxFQUFJTyxDQUFKLEVBQVU7QUFDeEJQLElBQUFBLENBQUMsQ0FBQ0QsZ0JBQUYsQ0FBbUIsUUFBbkIsRUFBNkIsVUFBQ1MsRUFBRCxFQUFRO0FBQ25DLFVBQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDMUIsS0FBRCxFQUFRTyxXQUFSLENBQVIsSUFBZ0MsRUFBL0M7QUFDQUUsTUFBQUEsa0JBQWtCLENBQUNPLENBQUQsRUFBSVMsTUFBTSxDQUFDVCxDQUFDLENBQUNXLElBQUgsQ0FBVixDQUFsQjtBQUNELEtBSEQ7QUFJRCxHQUxELEVBL0ZXLENBc0dYOztBQUNBM0IsRUFBQUEsS0FBSyxDQUFDRixhQUFOLENBQW9CLFVBQXBCLEVBQWdDaUIsZ0JBQWhDLENBQWlELE9BQWpELEVBQTBELFVBQVVDLENBQVYsRUFBYTtBQUNyRUEsSUFBQUEsQ0FBQyxDQUFDQyxjQUFGO0FBQ0EsUUFBTUgsR0FBRyxHQUFHZCxLQUFLLENBQUNGLGFBQU4sQ0FBb0IsYUFBcEIsQ0FBWjtBQUNBLFFBQU04RCxNQUFNLEdBQUc5QyxHQUFHLENBQUMrQyxTQUFKLENBQWMsSUFBZCxDQUFmO0FBQ0FELElBQUFBLE1BQU0sQ0FBQzFELGdCQUFQLENBQXdCLE9BQXhCLEVBQWlDb0IsT0FBakMsQ0FBeUMsVUFBQ04sQ0FBRCxFQUFPO0FBQzlDQSxNQUFBQSxDQUFDLENBQUNxQixLQUFGLEdBQVVyQixDQUFDLENBQUM4QyxZQUFaO0FBQ0E5QyxNQUFBQSxDQUFDLENBQUMrQyxTQUFGLENBQVkzQyxNQUFaLENBQW1CLFlBQW5CO0FBQ0FKLE1BQUFBLENBQUMsQ0FBQ2dELFVBQUYsQ0FBYTlELGdCQUFiLENBQThCLG1CQUE5QixFQUFtRG9CLE9BQW5ELENBQTJELFVBQUMyQyxFQUFELEVBQVE7QUFDakVBLFFBQUFBLEVBQUUsQ0FBQzdDLE1BQUg7QUFDRCxPQUZEO0FBR0QsS0FORDtBQVFBcEIsSUFBQUEsS0FBSyxDQUFDRixhQUFOLENBQW9CLGNBQXBCLEVBQW9Db0UsTUFBcEMsQ0FBMkNOLE1BQTNDO0FBQ0F2QyxJQUFBQSxhQUFhLENBQUN1QyxNQUFELENBQWI7QUFDQXBELElBQUFBLG1CQUFtQjtBQUNwQixHQWZELEVBdkdXLENBd0hYOztBQUNBVCxFQUFBQSxRQUFRLENBQUNnQixnQkFBVCxDQUEwQixlQUExQixFQUEyQyxVQUFVQyxDQUFWLEVBQWE7QUFDdER1QyxJQUFBQSxjQUFjLENBQUMsSUFBRCxDQUFkO0FBQ0QsR0FGRDtBQUdBeEQsRUFBQUEsUUFBUSxDQUFDZ0IsZ0JBQVQsQ0FBMEIsaUJBQTFCLEVBQTZDLFVBQVVDLENBQVYsRUFBYTtBQUN4REEsSUFBQUEsQ0FBQyxDQUFDQyxjQUFGO0FBQ0EwQyxJQUFBQSxtQkFBbUIsQ0FBQyxJQUFELENBQW5CO0FBQ0QsR0FIRCxFQTVIVyxDQWlJWDs7QUFDQS9ELEVBQUFBLE1BQU0sQ0FBQ21CLGdCQUFQLENBQXdCLGVBQXhCLEVBQXlDLFVBQVVDLENBQVYsRUFBYTtBQUNwRCxRQUFJLENBQUNOLGdCQUFnQixDQUFDVixLQUFELENBQXJCLEVBQThCO0FBQzVCZ0IsTUFBQUEsQ0FBQyxDQUFDQyxjQUFGO0FBQ0EwQyxNQUFBQSxtQkFBbUIsQ0FBQyxJQUFELENBQW5CO0FBQ0QsS0FIRCxNQUdPO0FBQ0xKLE1BQUFBLGNBQWMsQ0FBQyxJQUFELENBQWQ7QUFDRDtBQUNGLEdBUEQ7QUFTQTNELEVBQUFBLE1BQU0sQ0FBQ21CLGdCQUFQLENBQXdCLGlCQUF4QixFQUEyQyxVQUFVQyxDQUFWLEVBQWE7QUFDdERBLElBQUFBLENBQUMsQ0FBQ0MsY0FBRjtBQUNBMEMsSUFBQUEsbUJBQW1CLENBQUMsSUFBRCxDQUFuQjtBQUNELEdBSEQsRUEzSVcsQ0FnSlg7O0FBQ0EvRCxFQUFBQSxNQUFNLENBQUNFLGFBQVAsQ0FBcUIsY0FBckIsRUFBcUNpQixnQkFBckMsQ0FBc0QsT0FBdEQsRUFBK0QsWUFBWTtBQUN6RSxRQUFNb0QsT0FBTyxHQUFHdkUsTUFBTSxDQUFDRSxhQUFQLENBQXFCLGdCQUFyQixDQUFoQixDQUR5RSxDQUV6RTs7QUFDQXNFLElBQUFBLFdBQVcsQ0FBQ0QsT0FBRCxDQUFYLENBQXFCRSxJQUFyQixDQUEwQixVQUFVQyxNQUFWLEVBQWtCO0FBQzFDekUsTUFBQUEsUUFBUSxDQUFDMEUsSUFBVCxDQUFjQyxXQUFkLENBQTBCRixNQUExQjtBQUNBLFVBQU1HLEVBQUUsR0FBRzVFLFFBQVEsQ0FBQzZFLGFBQVQsQ0FBdUIsR0FBdkIsQ0FBWDtBQUNBRCxNQUFBQSxFQUFFLENBQUNFLElBQUgsR0FBVUwsTUFBTSxDQUNiTSxTQURPLENBQ0csWUFESCxFQUVQQyxPQUZPLENBRUMsWUFGRCxFQUVlLG9CQUZmLENBQVY7QUFHQUosTUFBQUEsRUFBRSxDQUFDSyxRQUFILEdBQWMsR0FBR0MsTUFBSCxDQUNaLElBQUlDLElBQUosR0FBV0MsY0FBWCxDQUEwQixLQUExQixFQUFpQztBQUFFQyxRQUFBQSxNQUFNLEVBQUU7QUFBVixPQUFqQyxDQURZLEVBRVosZ0JBRlksQ0FBZDtBQUlBVCxNQUFBQSxFQUFFLENBQUNVLEtBQUg7QUFDRCxLQVhEO0FBWUQsR0FmRCxFQWpKVyxDQWtLWDs7QUFDQSxNQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFELEVBQVc7QUFDN0IsUUFBTUMsU0FBUyxHQUFHRCxLQUFLLENBQUNFLFNBQXhCO0FBQ0EsUUFBTUMsU0FBUyxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWSxFQUFaLEVBQWdCLGFBQWhCLEVBQStCLEVBQS9CLENBQWxCO0FBQ0FGLElBQUFBLFNBQVMsQ0FBQzNGLFFBQVYsQ0FBbUI2RixJQUFuQjtBQUNBRixJQUFBQSxTQUFTLENBQUMzRixRQUFWLENBQW1COEYsS0FBbkI7QUFXQUgsSUFBQUEsU0FBUyxDQUFDM0YsUUFBVixDQUFtQjhGLEtBQW5CLENBQXlCTCxTQUF6QjtBQUNBRSxJQUFBQSxTQUFTLENBQUMzRixRQUFWLENBQW1CK0YsS0FBbkIsQ0FBeUIsZ0JBQXpCO0FBQ0QsR0FqQkQ7O0FBbUJBaEcsRUFBQUEsTUFBTSxDQUFDRSxhQUFQLENBQXFCLFFBQXJCLEVBQStCaUIsZ0JBQS9CLENBQWdELE9BQWhELEVBQXlELFlBQVk7QUFDbkUsUUFBTThFLEdBQUcsR0FBRyxJQUFJYixJQUFKLEdBQVdDLGNBQVgsQ0FBMEIsS0FBMUIsRUFBaUM7QUFBRUMsTUFBQUEsTUFBTSxFQUFFO0FBQVYsS0FBakMsQ0FBWjtBQUNBLFFBQU1ZLFNBQVMsR0FBR2xHLE1BQU0sQ0FBQ0UsYUFBUCxDQUNoQiw4QkFEZ0IsQ0FBbEI7QUFHQSxRQUFNaUcsWUFBWSxHQUFHRCxTQUFTLENBQUNqQyxTQUFWLENBQW9CLElBQXBCLENBQXJCO0FBQ0FrQyxJQUFBQSxZQUFZLENBQUNqRyxhQUFiLENBQTJCLGVBQTNCLEVBQTRDc0IsTUFBNUM7QUFDQTJFLElBQUFBLFlBQVksQ0FBQ3JDLGtCQUFiLENBQ0UsV0FERiwwRUFFd0NtQyxHQUZ4QztBQUlBVCxJQUFBQSxXQUFXLENBQUNXLFlBQUQsQ0FBWDtBQUNELEdBWkQ7QUFhRCxDQW5NRCIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3QgJG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21vZGFsJyk7XHJcbiAgY29uc3QgJHByZXZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJldmlldycpO1xyXG4gIGNvbnN0ICRmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybSNmb3JtJyk7XHJcbiAgY29uc3QgJGlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LCB0ZXh0YXJlYSwgc2VsZWN0Jyk7XHJcblxyXG4gIC8vIGNvbW1vbiBmblxyXG4gIGNvbnN0IHsgc2V0QW1vdW50LCBzZXRUb3RhbCB9ID0gY29tbW9uKCk7XHJcblxyXG4gIC8vIHZhbGlkYXRlXHJcbiAgY29uc3Qge1xyXG4gICAgY29uc3RyYWludHMsXHJcbiAgICBzZXRJdGVtRm9ybVZhbGlkYXRlLFxyXG4gICAgc2hvd0Vycm9yc0ZvcklucHV0LFxyXG4gICAgaGFuZGxlRm9ybVN1Ym1pdCxcclxuICB9ID0gdmVyaWZ5KCk7XHJcblxyXG4gIC8vIG1vZGFsIHZpZXdcclxuICBjb25zdCB7IGNyZWF0ZU1vZGFsIH0gPSBtb2RhbFZpZXcoKTtcclxuXHJcbiAgY29uc3QgZGVsSXRlbSA9IChyb3cpID0+IHtcclxuICAgIHJvdy5xdWVyeVNlbGVjdG9yKCcuZGVsSXRlbScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtaXRlbV0nKS5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgICAgc2V0VG90YWwoKTtcclxuICAgICAgfVxyXG4gICAgICBzZXRJdGVtRm9ybVZhbGlkYXRlKCk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBjb25zdCB1cGRhdGVJdGVtUm93ID0gKHJvdykgPT4ge1xyXG4gICAgcm93LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0JykuZm9yRWFjaCgoZSwgaSkgPT4ge1xyXG4gICAgICBlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChldikgPT4ge1xyXG4gICAgICAgIHNldEFtb3VudChyb3cpO1xyXG4gICAgICAgIHNldFRvdGFsKCk7XHJcbiAgICAgICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGUoJGZvcm0sIGNvbnN0cmFpbnRzKSB8fCB7fTtcclxuICAgICAgICBzaG93RXJyb3JzRm9ySW5wdXQoZSwgZXJyb3JzW2UubmFtZV0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgZGVsSXRlbShyb3cpO1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIGZvcm1EYXRhXHJcbiAgICogQHJldHVybnMg6KGo5Zau6LOH5paZXHJcbiAgICovXHJcbiAgY29uc3QgZm9ybURhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBsb2dvRmlsZSA9ICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPWxvZ29dJyk/LmZpbGVzWzBdO1xyXG4gICAgY29uc3QgZ2V0TG9nbyA9ICEhbG9nb0ZpbGUgPyBVUkwuY3JlYXRlT2JqZWN0VVJMKGxvZ29GaWxlKSA6IG51bGw7XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IHtcclxuICAgICAgbG9nbzogZ2V0TG9nbyxcclxuICAgICAgY29tcGFueTogJGZvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9Y29tcGFueV0nKS52YWx1ZSxcclxuICAgICAgdGF4SUQ6ICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPXRheElEXScpLnZhbHVlLFxyXG4gICAgICBuYW1lOiAkZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1uYW1lXScpLnZhbHVlLFxyXG4gICAgICBwaG9uZTogJGZvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9cGhvbmVdJykudmFsdWUsXHJcbiAgICAgIGVtYWlsOiAkZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1lbWFpbF0nKS52YWx1ZSxcclxuICAgICAgc3RhcnREYXRlOiAkZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1zdGFydERhdGVdJykudmFsdWUsXHJcbiAgICAgIGVuZERhdGU6ICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPWVuZERhdGVdJykudmFsdWUsXHJcbiAgICAgIGRlc2M6ICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPWRlc2NdJykudmFsdWUsXHJcbiAgICAgIHRvdGFsOiAkZm9ybS5xdWVyeVNlbGVjdG9yKCcjdG90YWwtcHJpY2UnKS50ZXh0Q29udGVudCxcclxuICAgICAgaXRlbXM6IFtdLFxyXG4gICAgfTtcclxuXHJcbiAgICAkZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pdGVtXScpLmZvckVhY2goKGUsIGluZGV4KSA9PiB7XHJcbiAgICAgIGRhdGEuaXRlbXMucHVzaCh7XHJcbiAgICAgICAgY2F0ZWdvcnk6IGUucXVlcnlTZWxlY3RvcihgW25hbWUqPWNhdGVnb3J5YCkudmFsdWUsXHJcbiAgICAgICAgaXRlbTogZS5xdWVyeVNlbGVjdG9yKGBbbmFtZSo9aXRlbWApLnZhbHVlLFxyXG4gICAgICAgIHByaWNlOiBlLnF1ZXJ5U2VsZWN0b3IoYFtuYW1lKj1wcmljZWApLnZhbHVlLFxyXG4gICAgICAgIGNvdW50OiBlLnF1ZXJ5U2VsZWN0b3IoYFtuYW1lKj1jb3VudGApLnZhbHVlLFxyXG4gICAgICAgIHVuaXQ6IGUucXVlcnlTZWxlY3RvcihgW25hbWUqPXVuaXRgKS52YWx1ZSxcclxuICAgICAgICBhbW91bnQ6IGUucXVlcnlTZWxlY3RvcihgW25hbWUqPWFtb3VudF1gKS52YWx1ZSxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGV4cG9ydFRlbXBsYXRlID0gZnVuY3Rpb24odG1wKSB7XHJcbiAgICBjb25zdCBkYXRhID0gZm9ybURhdGEoKTtcclxuICAgIGNvbnN0IG1vZGFsQm9keSA9IHRtcC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtbWFpbicpO1xyXG5cclxuICAgIG1vZGFsQm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGNyZWF0ZU1vZGFsKGRhdGEpKTtcclxuICB9O1xyXG4gIGNvbnN0IHJlc2V0RXhwb3J0VGVtcGxhdGUgPSBmdW5jdGlvbih0bXApIHtcclxuICAgIHRtcC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtbWFpbicpLnRleHRDb250ZW50ID0gJyc7XHJcbiAgfVxyXG5cclxuICAvLz09PT09PT09IGRvY3VtZW50IGluaXQgPT09PT09PT1cclxuICBcclxuICAkZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pdGVtXScpLmZvckVhY2goKGUpID0+IHtcclxuICAgIHVwZGF0ZUl0ZW1Sb3coZSk7XHJcbiAgICBzZXRJdGVtRm9ybVZhbGlkYXRlKCk7XHJcbiAgfSk7XHJcblxyXG4gICRpbnB1dHMuZm9yRWFjaCgoZSwgaSkgPT4ge1xyXG4gICAgZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZXYpID0+IHtcclxuICAgICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGUoJGZvcm0sIGNvbnN0cmFpbnRzKSB8fCB7fTtcclxuICAgICAgc2hvd0Vycm9yc0ZvcklucHV0KGUsIGVycm9yc1tlLm5hbWVdKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICAvLyBhZGQgaXRlbSByb3dcclxuICAkZm9ybS5xdWVyeVNlbGVjdG9yKCcjYWRkSXRlbScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHJvdyA9ICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWl0ZW1dJyk7XHJcbiAgICBjb25zdCBuZXdSb3cgPSByb3cuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgbmV3Um93LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0JykuZm9yRWFjaCgoZSkgPT4ge1xyXG4gICAgICBlLnZhbHVlID0gZS5kZWZhdWx0VmFsdWU7XHJcbiAgICAgIGUuY2xhc3NMaXN0LnJlbW92ZSgnaXMtaW52YWxpZCcpO1xyXG4gICAgICBlLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvckFsbCgnLmludmFsaWQtZmVlZGJhY2snKS5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICAgIGVsLnJlbW92ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWl0ZW1zXScpLmFwcGVuZChuZXdSb3cpO1xyXG4gICAgdXBkYXRlSXRlbVJvdyhuZXdSb3cpO1xyXG4gICAgc2V0SXRlbUZvcm1WYWxpZGF0ZSgpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBvbiBwcmV2aWV3XHJcbiAgJHByZXZpZXcuYWRkRXZlbnRMaXN0ZW5lcignc2hvdy5icy5tb2RhbCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBleHBvcnRUZW1wbGF0ZSh0aGlzKTtcclxuICB9KTtcclxuICAkcHJldmlldy5hZGRFdmVudExpc3RlbmVyKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmVzZXRFeHBvcnRUZW1wbGF0ZSh0aGlzKVxyXG4gIH0pO1xyXG5cclxuICAvLyBvbiBTdWJtaXRcclxuICAkbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcignc2hvdy5icy5tb2RhbCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBpZiAoIWhhbmRsZUZvcm1TdWJtaXQoJGZvcm0pKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgcmVzZXRFeHBvcnRUZW1wbGF0ZSh0aGlzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGV4cG9ydFRlbXBsYXRlKHRoaXMpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAkbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHJlc2V0RXhwb3J0VGVtcGxhdGUodGhpcyk7XHJcbiAgfSk7XHJcblxyXG4gIC8vID09PT09PT09PT09IEV4cG9ydCA9PT09PT09PT09PT1cclxuICAkbW9kYWwucXVlcnlTZWxlY3RvcignI2V4cG9ydEltYWdlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBwcmV2aWV3ID0gJG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jb250ZW50Jyk7XHJcbiAgICAvLyBleHBvcnQgSW1hZ2VcclxuICAgIGh0bWwyY2FudmFzKHByZXZpZXcpLnRoZW4oZnVuY3Rpb24gKGNhbnZhcykge1xyXG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcbiAgICAgIGNvbnN0ICRhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gICAgICAkYS5ocmVmID0gY2FudmFzXHJcbiAgICAgICAgLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycpXHJcbiAgICAgICAgLnJlcGxhY2UoJ2ltYWdlL2pwZWcnLCAnaW1hZ2Uvb2N0ZXQtc3RyZWFtJyk7XHJcbiAgICAgICRhLmRvd25sb2FkID0gJycuY29uY2F0KFxyXG4gICAgICAgIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ3JvYycsIHsgaG91cjEyOiBmYWxzZSB9KSxcclxuICAgICAgICAnX3F1b3RhdGlvbi5qcGcnXHJcbiAgICAgICk7XHJcbiAgICAgICRhLmNsaWNrKCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxuXHJcbiAgLy8gPT09PT09PT09PT0gUHJpbnQgPT09PT09PT09PT09PT1cclxuICBjb25zdCBwcmludFNjcmVlbiA9IChwcmludCkgPT4ge1xyXG4gICAgY29uc3QgcHJpbnRBcmVhID0gcHJpbnQuaW5uZXJIVE1MO1xyXG4gICAgY29uc3QgcHJpbnRQYWdlID0gd2luZG93Lm9wZW4oJycsICdQcmludGluZy4uLicsICcnKTtcclxuICAgIHByaW50UGFnZS5kb2N1bWVudC5vcGVuKCk7XHJcbiAgICBwcmludFBhZ2UuZG9jdW1lbnQud3JpdGUoXHJcbiAgICAgIGA8aHRtbD5cclxuICAgICAgICA8aGVhZD5cclxuICAgICAgICA8bWV0YSBjaGFyc2V0PVwiVVRGLThcIiAvPlxyXG4gICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiIC8+XHJcbiAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjBcIiAvPlxyXG4gICAgICAgICAgPHRpdGxlPuWgseWDueWWrueUoueUn+WZqDwvdGl0bGU+XHJcbiAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vdW5wa2cuY29tL0B0YWJsZXIvY29yZUBsYXRlc3QvZGlzdC9jc3MvdGFibGVyLm1pbi5jc3NcIi8+XHJcbiAgICAgICAgPC9oZWFkPlxyXG4gICAgICAgIDxib2R5IG9ubG9hZD0nd2luZG93LnByaW50KCk7d2luZG93LmNsb3NlKCknPmBcclxuICAgICk7XHJcbiAgICBwcmludFBhZ2UuZG9jdW1lbnQud3JpdGUocHJpbnRBcmVhKTtcclxuICAgIHByaW50UGFnZS5kb2N1bWVudC5jbG9zZSgnPC9ib2R5PjwvaHRtbD4nKTtcclxuICB9O1xyXG5cclxuICAkbW9kYWwucXVlcnlTZWxlY3RvcignI3ByaW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCdyb2MnLCB7IGhvdXIxMjogZmFsc2UgfSk7XHJcbiAgICBjb25zdCBwcmludEh0bWwgPSAkbW9kYWwucXVlcnlTZWxlY3RvcihcclxuICAgICAgJy5tb2RhbC1kaWFsb2cgLm1vZGFsLWNvbnRlbnQnXHJcbiAgICApO1xyXG4gICAgY29uc3QgbmV3UHJpbnRIdG1sID0gcHJpbnRIdG1sLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIG5ld1ByaW50SHRtbC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtZm9vdGVyJykucmVtb3ZlKCk7XHJcbiAgICBuZXdQcmludEh0bWwuaW5zZXJ0QWRqYWNlbnRIVE1MKFxyXG4gICAgICAnYmVmb3JlZW5kJyxcclxuICAgICAgYDxwIHN0eWxlPVwidGV4dC1hbGlnbjogcmlnaHQ7XCI+5YiX5Y2w5pmC6ZaT77yaJHtub3d9PC9wPmBcclxuICAgICk7XHJcbiAgICBwcmludFNjcmVlbihuZXdQcmludEh0bWwpO1xyXG4gIH0pO1xyXG59KSgpO1xyXG4iXSwiZmlsZSI6Im1haW4uanMifQ==
